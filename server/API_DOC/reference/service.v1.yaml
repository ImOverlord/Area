openapi: 3.0.0
info:
  title: Service
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /subscribe:
    put:
      summary: ''
      operationId: put-subscribe
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  text:
                    type: string
                required:
                  - code
                  - text
              examples:
                Success:
                  value:
                    code: '00'
                    text: Area Was added to account
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  text:
                    type: string
              examples:
                Incorrect Authorization token:
                  value:
                    code: '02'
                    text: Wrong Credentials
        '500':
          description: |-
            Internal Server Error

            May occure on Firebase Error, Service Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  text:
                    type: string
              examples:
                Firebase Error:
                  value:
                    code: '00'
                    text: Server Error
                Service Error:
                  value:
                    code: '00'
                    text: Server Error
      description: Add an Area to a User.
      parameters:
        - schema:
            type: string
          in: header
          name: Authorization
          required: true
          description: Firebase User JWT
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                actionName:
                  type: string
                actionData:
                  type: object
                reactionName:
                  type: string
                reactionData:
                  type: object
              required:
                - actionName
                - actionData
                - reactionName
                - reactionData
  '/reactions/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Name of the service
    get:
      summary: View Reactions for a Service
      tags: []
      responses: {}
      operationId: get-actions-name
      description: Endpoint to get all the `Reactions` on a Service.
  '/actions/{name}':
    parameters:
      - schema:
          type: string
        name: name
        in: path
        required: true
        description: Name of the Service
    get:
      summary: View Actions for a Service
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    type: string
                  text:
                    type: string
                  data:
                    type: object
                    properties:
                      actions:
                        type: array
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                            description:
                              type: string
                            form:
                              type: object
                              properties:
                                selectionBox:
                                  type: object
                                  properties:
                                    title:
                                      type: string
                                    values:
                                      type: array
                                      items:
                                        type: string
              examples:
                Actions For Time Service:
                  value:
                    code: '00'
                    text: Actions for Time Service
                    data:
                      actions:
                        - name: Every Day At
                          description: This Trigger fires every single day at a specific time set by you.
                          form:
                            - selectionBox:
                                title: Time
                                values:
                                  - 12am
                                  - 1pm
      operationId: get-reactions-name
      description: Endpoint to get all the `Actions` on a Service.
components:
  schemas: {}
